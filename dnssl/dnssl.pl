#!/usr/bin/perl

use lib '/data/psi/Libs', './';

use ModernStyle;
use Data::Dumper;

use Core qw(load_core);

use PSI::Console qw(read_stdin);
use Plugins qw(plugin_config);

# print to stdout before newline
$|++;

######################################################
# cloudflare.cfgen is about cloudflare api keys
# letsencrypt.cfgen is about letsencrypt api keys
# dns.cfgen is a complete view of permanent dns entries, generated by cfgen

# cfgen
# - during each build, cfgen puts a dns.pm file in config/_generated/DNS
# - the _generated folder is not checked in, the configfile is just a byproduct of a cfgen build run.

# cloudflare
# - cloudflare library might be used in genesis or other tools, but not the dns file
# - synching/updating live dns with this configfile,
#   no machine besides op ever needs to do that.

# letsencrypt
# - needs cloudflare library to set/del TXT records
# - reads/writes secrets (including api keys). does not need to view/update other config
#   certs generated are just files. other tools should add them to config as required
#   BUT a naming scheme must be established here
# - it does not interact with anything else

######################################################

my $debug = 0;

# load core
my $core = load_core( { DEBUG => $debug } );

# load plugins
$core->{load}->( plugin_config($debug) );

# don't get interactive if commands are passed by command line.
# this also affects chroot macro resumes
if (@ARGV) {
    my $return = $core->{shell}->( join( ' ', @ARGV ) );
    exit $return;
}

say '';
say 'Use CTRL+R to review history, CTRL+B and CTRL+F to edit';
while ( my $line = read_stdin( 'dnssl # ', -style => 'bold blue' ) ) {
    $core->{shell}->($line);
}

